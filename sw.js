var c="/ /favicon.ico /manifest.json /robots.txt /sitemap.xml /?utm_source=web_app_manifest /disclaimer/ /offline/ /privacy-policy/ /technical-information/ /terms-of-service/ /images/apple-touch-icon.png /images/favicon-32x32.png /images/favicon-16x16.png /images/feature-graphic-1024x500.jpg /images/logo-144x144.png /images/logo-192x192.png /images/logo-256x256.png /images/logo-384x384.png /images/logo-512x512-maskable.png /images/logo-512x512.png /images/logo.svg".split(" "),g=self;
g.addEventListener("install",function(a){a.waitUntil(g.caches.open("20210330-223743").then(function(b){b.addAll(c.map(function(d){return new Request(d,{mode:"no-cors"})})).catch(function(d){return console.log("Could not pre-cache resource:",d)})}).catch(function(b){return console.log("Could not pre-cache resources:",b)}))});g.addEventListener("message",function(a){a=a.data.action;var b={action:a};"getVersion"==a?b[a]="20210330-223743":"skipWaiting"==a&&g.skipWaiting();h(b)});
g.addEventListener("fetch",function(a){a.respondWith(g.caches.match(a.request).then(function(b){return b||k(a.request)}))});g.addEventListener("activate",function(a){h({event:a.type});a.waitUntil(l());m();return g.clients.claim()});function h(a){g.clients.matchAll().then(function(b){return b.forEach(function(d){d.postMessage(a)})})}function l(){return g.caches.keys().then(function(a){return Promise.all(a.map(function(b){if("20210330-223743"!==b)return g.caches.delete(b)}))})}
function m(){g.registration.addEventListener("updatefound",function(a){var b=g.registration.installing;b.addEventListener("statechange",function(d){"installed"==b.state&&(b.postMessage({action:"skipWaiting"}),h({event:d.type,action:"refresh"}))});h({event:a.type})})}
function k(a){var b=fetch(a),d=-1!=a.url.indexOf("&jsonp=");if(n(a)||d)b=b.then(function(f){return g.caches.open("20210330-223743").then(function(e){e.put(d?"/offline.jsonp":a,f.clone());return f})});return b.catch(function(){return g.caches.open("20210330-223743").then(function(f){return d?f.match("/offline.jsonp").then(function(e){e||(e=a.url.split("&jsonp=").pop().split("&")[0],e=fetch(new Request("data:text/javascript,"+e+"([])")));return e}):f.match("/offline/")})})}
function n(a){var b=a.url,d=0==b.indexOf(g.location.origin);b=-1!=b.indexOf("nocache");return"GET"==a.method&&d&&!b};
